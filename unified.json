{
    "{081485D8-701D-4979-A03A-9DB2DADD2CDA}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"unified\", {\n  enumerable: true,\n  get: function get() {\n    return _index.unified;\n  }\n});\n\nvar _index = require(\"./lib/index.js\");",
        "mapping": {
            "./lib/index.js": "{D9EC8572-B22B-4F5D-9062-21BB81DA3E07}"
        },
        "path": "{unified}/index.js"
    },
    "{D9EC8572-B22B-4F5D-9062-21BB81DA3E07}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unified = void 0;\n\nvar _bail = require(\"bail\");\n\nvar _isBuffer = _interopRequireDefault(require(\"is-buffer\"));\n\nvar _extend = _interopRequireDefault(require(\"extend\"));\n\nvar _isPlainObj = _interopRequireDefault(require(\"is-plain-obj\"));\n\nvar _trough = require(\"trough\");\n\nvar _vfile = require(\"vfile\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar unified = base().freeze();\nexports.unified = unified;\nvar own = {}.hasOwnProperty;\n\nfunction base() {\n  var transformers = (0, _trough.trough)();\n  var attachers = [];\n  var namespace = {};\n  var frozen;\n  var freezeIndex = -1;\n  processor.data = data;\n  processor.Parser = undefined;\n  processor.Compiler = undefined;\n  processor.freeze = freeze;\n  processor.attachers = attachers;\n  processor.use = use;\n  processor.parse = parse;\n  processor.stringify = stringify;\n  processor.run = run;\n  processor.runSync = runSync;\n  processor.process = process;\n  processor.processSync = processSync;\n  return processor;\n\n  function processor() {\n    var destination = base();\n    var index = -1;\n\n    while (++index < attachers.length) {\n      destination.use.apply(destination, _toConsumableArray(attachers[index]));\n    }\n\n    destination.data((0, _extend[\"default\"])(true, {}, namespace));\n    return destination;\n  }\n\n  function data(key, value) {\n    if (typeof key === 'string') {\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen);\n        namespace[key] = value;\n        return processor;\n      }\n\n      return own.call(namespace, key) && namespace[key] || null;\n    }\n\n    if (key) {\n      assertUnfrozen('data', frozen);\n      namespace = key;\n      return processor;\n    }\n\n    return namespace;\n  }\n\n  function freeze() {\n    if (frozen) {\n      return processor;\n    }\n\n    while (++freezeIndex < attachers.length) {\n      var _attachers$freezeInde = _toArray(attachers[freezeIndex]),\n          attacher = _attachers$freezeInde[0],\n          options = _attachers$freezeInde.slice(1);\n\n      if (options[0] === false) {\n        continue;\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined;\n      }\n\n      var transformer = attacher.call.apply(attacher, [processor].concat(_toConsumableArray(options)));\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer);\n      }\n    }\n\n    frozen = true;\n    freezeIndex = Number.POSITIVE_INFINITY;\n    return processor;\n  }\n\n  function use(value) {\n    for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      options[_key - 1] = arguments[_key];\n    }\n\n    var settings;\n    assertUnfrozen('use', frozen);\n\n    if (value === null || value === undefined) {} else if (typeof value === 'function') {\n      addPlugin.apply(void 0, [value].concat(options));\n    } else if (_typeof(value) === 'object') {\n      if (Array.isArray(value)) {\n        addList(value);\n      } else {\n        addPreset(value);\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`');\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings);\n    }\n\n    return processor;\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value);\n      } else if (_typeof(value) === 'object') {\n        if (Array.isArray(value)) {\n          var _value = _toArray(value),\n              plugin = _value[0],\n              _options = _value.slice(1);\n\n          addPlugin.apply(void 0, [plugin].concat(_toConsumableArray(_options)));\n        } else {\n          addPreset(value);\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`');\n      }\n    }\n\n    function addPreset(result) {\n      addList(result.plugins);\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings);\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1;\n\n      if (plugins === null || plugins === undefined) {} else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          var thing = plugins[index];\n          add(thing);\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`');\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var index = -1;\n      var entry;\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index];\n          break;\n        }\n      }\n\n      if (entry) {\n        if ((0, _isPlainObj[\"default\"])(entry[1]) && (0, _isPlainObj[\"default\"])(value)) {\n          value = (0, _extend[\"default\"])(true, entry[1], value);\n        }\n\n        entry[1] = value;\n      } else {\n        attachers.push(Array.prototype.slice.call(arguments));\n      }\n    }\n  }\n\n  function parse(doc) {\n    processor.freeze();\n    var file = vfile(doc);\n    var Parser = processor.Parser;\n    assertParser('parse', Parser);\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse();\n    }\n\n    return Parser(String(file), file);\n  }\n\n  function stringify(node, doc) {\n    processor.freeze();\n    var file = vfile(doc);\n    var Compiler = processor.Compiler;\n    assertCompiler('stringify', Compiler);\n    assertNode(node);\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile();\n    }\n\n    return Compiler(node, file);\n  }\n\n  function run(node, doc, callback) {\n    assertNode(node);\n    processor.freeze();\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc;\n      doc = undefined;\n    }\n\n    if (!callback) {\n      return new Promise(executor);\n    }\n\n    executor(null, callback);\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(doc), done);\n\n      function done(error, tree, file) {\n        tree = tree || node;\n\n        if (error) {\n          reject(error);\n        } else if (resolve) {\n          resolve(tree);\n        } else {\n          callback(null, tree, file);\n        }\n      }\n    }\n  }\n\n  function runSync(node, file) {\n    var result;\n    var complete;\n    processor.run(node, file, done);\n    assertDone('runSync', 'run', complete);\n    return result;\n\n    function done(error, tree) {\n      (0, _bail.bail)(error);\n      result = tree;\n      complete = true;\n    }\n  }\n\n  function process(doc, callback) {\n    processor.freeze();\n    assertParser('process', processor.Parser);\n    assertCompiler('process', processor.Compiler);\n\n    if (!callback) {\n      return new Promise(executor);\n    }\n\n    executor(null, callback);\n\n    function executor(resolve, reject) {\n      var file = vfile(doc);\n      processor.run(processor.parse(file), file, function (error, tree, file) {\n        if (error || !tree || !file) {\n          done(error);\n        } else {\n          var result = processor.stringify(tree, file);\n\n          if (result === undefined || result === null) {} else if (looksLikeAVFileValue(result)) {\n            file.value = result;\n          } else {\n            file.result = result;\n          }\n\n          done(error, file);\n        }\n      });\n\n      function done(error, file) {\n        if (error || !file) {\n          reject(error);\n        } else if (resolve) {\n          resolve(file);\n        } else {\n          callback(null, file);\n        }\n      }\n    }\n  }\n\n  function processSync(doc) {\n    var complete;\n    processor.freeze();\n    assertParser('processSync', processor.Parser);\n    assertCompiler('processSync', processor.Compiler);\n    var file = vfile(doc);\n    processor.process(file, done);\n    assertDone('processSync', 'process', complete);\n    return file;\n\n    function done(error) {\n      complete = true;\n      (0, _bail.bail)(error);\n    }\n  }\n}\n\nfunction newable(value, name) {\n  return typeof value === 'function' && value.prototype && (keys(value.prototype) || name in value.prototype);\n}\n\nfunction keys(value) {\n  var key;\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`');\n  }\n}\n\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`');\n  }\n}\n\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error('Cannot call `' + name + '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.');\n  }\n}\n\nfunction assertNode(node) {\n  if (!(0, _isPlainObj[\"default\"])(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`');\n  }\n}\n\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error('`' + name + '` finished async. Use `' + asyncName + '` instead');\n  }\n}\n\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new _vfile.VFile(value);\n}\n\nfunction looksLikeAVFile(value) {\n  return Boolean(value && _typeof(value) === 'object' && 'message' in value && 'messages' in value);\n}\n\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || (0, _isBuffer[\"default\"])(value);\n}",
        "mapping": {
            "bail": "{FB810481-2AA2-4547-B7E4-47E43CF6A45D}",
            "is-buffer": "{336D0FE9-C8C8-4F89-8473-E755DC6B1B9C}",
            "extend": "{912E4E48-942F-474B-96DA-5063B5988AD7}",
            "is-plain-obj": "{52C18C27-87ED-4372-9E25-E9212F734601}",
            "trough": "{3D78F08E-2E9C-45BC-9593-D8BFAF0C180A}",
            "vfile": "{D3DE24DD-60C0-49D6-9DE0-8BE1BC2CEA03}"
        },
        "path": "{unified}/lib/index.js"
    },
    "{FB810481-2AA2-4547-B7E4-47E43CF6A45D}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bail = bail;\n\nfunction bail(error) {\n  if (error) {\n    throw error;\n  }\n}",
        "mapping": {},
        "path": "{unified}/../bail/index.js"
    },
    "{336D0FE9-C8C8-4F89-8473-E755DC6B1B9C}": {
        "source": "\"use strict\";\n/*!\n* Determine if an object is a Buffer\n*\n* @author   Feross Aboukhadijeh <https://feross.org>\n* @license  MIT\n*/\n\nmodule.exports = function isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};",
        "mapping": {},
        "path": "{unified}/../is-buffer/index.js"
    },
    "{912E4E48-942F-474B-96DA-5063B5988AD7}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(arr);\n  }\n\n  return toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n  if (!obj || toStr.call(obj) !== '[object Object]') {\n    return false;\n  }\n\n  var hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\n  if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n    return false;\n  }\n\n  var key;\n\n  for (key in obj) {}\n\n  return typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nvar setProperty = function setProperty(target, options) {\n  if (defineProperty && options.name === '__proto__') {\n    defineProperty(target, options.name, {\n      enumerable: true,\n      configurable: true,\n      value: options.newValue,\n      writable: true\n    });\n  } else {\n    target[options.name] = options.newValue;\n  }\n};\n\nvar getProperty = function getProperty(obj, name) {\n  if (name === '__proto__') {\n    if (!hasOwn.call(obj, name)) {\n      return void 0;\n    } else if (gOPD) {\n      return gOPD(obj, name).value;\n    }\n  }\n\n  return obj[name];\n};\n\nmodule.exports = function extend() {\n  var options, name, src, copy, copyIsArray, clone;\n  var target = arguments[0];\n  var i = 1;\n  var length = arguments.length;\n  var deep = false;\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = arguments[1] || {};\n    i = 2;\n  }\n\n  if (target == null || _typeof(target) !== 'object' && typeof target !== 'function') {\n    target = {};\n  }\n\n  for (; i < length; ++i) {\n    options = arguments[i];\n\n    if (options != null) {\n      for (name in options) {\n        src = getProperty(target, name);\n        copy = getProperty(options, name);\n\n        if (target !== copy) {\n          if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && isArray(src) ? src : [];\n            } else {\n              clone = src && isPlainObject(src) ? src : {};\n            }\n\n            setProperty(target, {\n              name: name,\n              newValue: extend(deep, clone, copy)\n            });\n          } else if (typeof copy !== 'undefined') {\n            setProperty(target, {\n              name: name,\n              newValue: copy\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return target;\n};",
        "mapping": {},
        "path": "{unified}/../extend/index.js"
    },
    "{52C18C27-87ED-4372-9E25-E9212F734601}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = isPlainObject;\n\nfunction isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}",
        "mapping": {},
        "path": "{unified}/../is-plain-obj/index.js"
    },
    "{3D78F08E-2E9C-45BC-9593-D8BFAF0C180A}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trough = trough;\nexports.wrap = wrap;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction trough() {\n  var fns = [];\n  var pipeline = {\n    run: run,\n    use: use\n  };\n  return pipeline;\n\n  function run() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    var middlewareIndex = -1;\n    var callback = values.pop();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback);\n    }\n\n    next.apply(void 0, [null].concat(_toConsumableArray(values)));\n\n    function next(error) {\n      var fn = fns[++middlewareIndex];\n      var index = -1;\n\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      for (var _len2 = arguments.length, output = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        output[_key2 - 1] = arguments[_key2];\n      }\n\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index];\n        }\n      }\n\n      values = output;\n\n      if (fn) {\n        wrap(fn, next).apply(void 0, output);\n      } else {\n        callback.apply(void 0, [null].concat(output));\n      }\n    }\n  }\n\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError('Expected `middelware` to be a function, not ' + middelware);\n    }\n\n    fns.push(middelware);\n    return pipeline;\n  }\n}\n\nfunction wrap(middleware, callback) {\n  var called;\n  return wrapped;\n\n  function wrapped() {\n    for (var _len3 = arguments.length, parameters = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      parameters[_key3] = arguments[_key3];\n    }\n\n    var fnExpectsCallback = middleware.length > parameters.length;\n    var result;\n\n    if (fnExpectsCallback) {\n      parameters.push(done);\n    }\n\n    try {\n      result = middleware.apply(this, parameters);\n    } catch (error) {\n      var exception = error;\n\n      if (fnExpectsCallback && called) {\n        throw exception;\n      }\n\n      return done(exception);\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done);\n      } else if (result instanceof Error) {\n        done(result);\n      } else {\n        then(result);\n      }\n    }\n  }\n\n  function done(error) {\n    if (!called) {\n      called = true;\n\n      for (var _len4 = arguments.length, output = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        output[_key4 - 1] = arguments[_key4];\n      }\n\n      callback.apply(void 0, [error].concat(output));\n    }\n  }\n\n  function then(value) {\n    done(null, value);\n  }\n}",
        "mapping": {},
        "path": "{unified}/../trough/index.js"
    },
    "{D3DE24DD-60C0-49D6-9DE0-8BE1BC2CEA03}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"VFile\", {\n  enumerable: true,\n  get: function get() {\n    return _index.VFile;\n  }\n});\n\nvar _index = require(\"./lib/index.js\");",
        "mapping": {
            "./lib/index.js": "{F5DCD18A-9F52-40A0-BC69-D2EA0ABF69B6}"
        },
        "path": "{unified}/../vfile/index.js"
    },
    "{F5DCD18A-9F52-40A0-BC69-D2EA0ABF69B6}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VFile = void 0;\n\nvar _isBuffer = _interopRequireDefault(require(\"is-buffer\"));\n\nvar _vfileMessage = require(\"vfile-message\");\n\nvar _minpath = require(\"./minpath.js\");\n\nvar _minproc = require(\"./minproc.js\");\n\nvar _minurl = require(\"./minurl.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname'];\n\nvar VFile = function () {\n  function VFile(value) {\n    _classCallCheck(this, VFile);\n\n    var options;\n\n    if (!value) {\n      options = {};\n    } else if (typeof value === 'string' || (0, _isBuffer[\"default\"])(value)) {\n      options = {\n        value: value\n      };\n    } else if ((0, _minurl.isUrl)(value)) {\n      options = {\n        path: value\n      };\n    } else {\n      options = value;\n    }\n\n    this.data = {};\n    this.messages = [];\n    this.history = [];\n    this.cwd = _minproc.proc.cwd();\n    this.value;\n    this.stored;\n    this.result;\n    this.map;\n    var index = -1;\n\n    while (++index < order.length) {\n      var _prop = order[index];\n\n      if (_prop in options && options[_prop] !== undefined) {\n        this[_prop] = _prop === 'history' ? _toConsumableArray(options[_prop]) : options[_prop];\n      }\n    }\n\n    var prop;\n\n    for (prop in options) {\n      if (!order.includes(prop)) this[prop] = options[prop];\n    }\n  }\n\n  _createClass(VFile, [{\n    key: \"path\",\n    get: function get() {\n      return this.history[this.history.length - 1];\n    },\n    set: function set(path) {\n      if ((0, _minurl.isUrl)(path)) {\n        path = (0, _minurl.urlToPath)(path);\n      }\n\n      assertNonEmpty(path, 'path');\n\n      if (this.path !== path) {\n        this.history.push(path);\n      }\n    }\n  }, {\n    key: \"dirname\",\n    get: function get() {\n      return typeof this.path === 'string' ? _minpath.path.dirname(this.path) : undefined;\n    },\n    set: function set(dirname) {\n      assertPath(this.basename, 'dirname');\n      this.path = _minpath.path.join(dirname || '', this.basename);\n    }\n  }, {\n    key: \"basename\",\n    get: function get() {\n      return typeof this.path === 'string' ? _minpath.path.basename(this.path) : undefined;\n    },\n    set: function set(basename) {\n      assertNonEmpty(basename, 'basename');\n      assertPart(basename, 'basename');\n      this.path = _minpath.path.join(this.dirname || '', basename);\n    }\n  }, {\n    key: \"extname\",\n    get: function get() {\n      return typeof this.path === 'string' ? _minpath.path.extname(this.path) : undefined;\n    },\n    set: function set(extname) {\n      assertPart(extname, 'extname');\n      assertPath(this.dirname, 'extname');\n\n      if (extname) {\n        if (extname.charCodeAt(0) !== 46) {\n          throw new Error('`extname` must start with `.`');\n        }\n\n        if (extname.includes('.', 1)) {\n          throw new Error('`extname` cannot contain multiple dots');\n        }\n      }\n\n      this.path = _minpath.path.join(this.dirname, this.stem + (extname || ''));\n    }\n  }, {\n    key: \"stem\",\n    get: function get() {\n      return typeof this.path === 'string' ? _minpath.path.basename(this.path, this.extname) : undefined;\n    },\n    set: function set(stem) {\n      assertNonEmpty(stem, 'stem');\n      assertPart(stem, 'stem');\n      this.path = _minpath.path.join(this.dirname || '', stem + (this.extname || ''));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(encoding) {\n      return (this.value || '').toString(encoding);\n    }\n  }, {\n    key: \"message\",\n    value: function message(reason, place, origin) {\n      var message = new _vfileMessage.VFileMessage(reason, place, origin);\n\n      if (this.path) {\n        message.name = this.path + ':' + message.name;\n        message.file = this.path;\n      }\n\n      message.fatal = false;\n      this.messages.push(message);\n      return message;\n    }\n  }, {\n    key: \"info\",\n    value: function info(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = null;\n      return message;\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(reason, place, origin) {\n      var message = this.message(reason, place, origin);\n      message.fatal = true;\n      throw message;\n    }\n  }]);\n\n  return VFile;\n}();\n\nexports.VFile = VFile;\n\nfunction assertPart(part, name) {\n  if (part && part.includes(_minpath.path.sep)) {\n    throw new Error('`' + name + '` cannot be a path: did not expect `' + _minpath.path.sep + '`');\n  }\n}\n\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty');\n  }\n}\n\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too');\n  }\n}",
        "mapping": {
            "is-buffer": "{69E99C68-EED5-44A3-B7E9-105CEB074F58}",
            "vfile-message": "{82F274A8-00A1-4CFA-89EC-603BE33033E0}",
            "./minpath.js": "{AD208682-449A-46BE-97E0-ECC5F9B27108}",
            "./minproc.js": "{E073EA8D-7600-4237-9F17-D3B4987D17D5}",
            "./minurl.js": "{B43F2E99-9EC6-4C7E-91AA-A9900856CB49}"
        },
        "path": "{unified}/../vfile/lib/index.js"
    },
    "{69E99C68-EED5-44A3-B7E9-105CEB074F58}": {
        "source": "\"use strict\";\n/*!\n* Determine if an object is a Buffer\n*\n* @author   Feross Aboukhadijeh <https://feross.org>\n* @license  MIT\n*/\n\nmodule.exports = function isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n};",
        "mapping": {},
        "path": "{unified}/../is-buffer/index.js"
    },
    "{82F274A8-00A1-4CFA-89EC-603BE33033E0}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VFileMessage = void 0;\n\nvar _unistUtilStringifyPosition = require(\"unist-util-stringify-position\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar VFileMessage = function (_Error) {\n  _inherits(VFileMessage, _Error);\n\n  var _super = _createSuper(VFileMessage);\n\n  function VFileMessage(reason, place, origin) {\n    var _this;\n\n    _classCallCheck(this, VFileMessage);\n\n    var parts = [null, null];\n    var position = {\n      start: {\n        line: null,\n        column: null\n      },\n      end: {\n        line: null,\n        column: null\n      }\n    };\n    _this = _super.call(this);\n\n    if (typeof place === 'string') {\n      origin = place;\n      place = undefined;\n    }\n\n    if (typeof origin === 'string') {\n      var index = origin.indexOf(':');\n\n      if (index === -1) {\n        parts[1] = origin;\n      } else {\n        parts[0] = origin.slice(0, index);\n        parts[1] = origin.slice(index + 1);\n      }\n    }\n\n    if (place) {\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position;\n        }\n      } else if ('start' in place || 'end' in place) {\n        position = place;\n      } else if ('line' in place || 'column' in place) {\n        position.start = place;\n      }\n    }\n\n    _this.name = (0, _unistUtilStringifyPosition.stringifyPosition)(place) || '1:1';\n    _this.message = _typeof(reason) === 'object' ? reason.message : reason;\n    _this.stack = _typeof(reason) === 'object' ? reason.stack : '';\n    _this.reason = _this.message;\n    _this.fatal;\n    _this.line = position.start.line;\n    _this.column = position.start.column;\n    _this.source = parts[0];\n    _this.ruleId = parts[1];\n    _this.position = position;\n    _this.actual;\n    _this.expected;\n    _this.file;\n    _this.url;\n    _this.note;\n    return _this;\n  }\n\n  return _createClass(VFileMessage);\n}(_wrapNativeSuper(Error));\n\nexports.VFileMessage = VFileMessage;\nVFileMessage.prototype.file = '';\nVFileMessage.prototype.name = '';\nVFileMessage.prototype.reason = '';\nVFileMessage.prototype.message = '';\nVFileMessage.prototype.stack = '';\nVFileMessage.prototype.fatal = null;\nVFileMessage.prototype.column = null;\nVFileMessage.prototype.line = null;\nVFileMessage.prototype.source = null;\nVFileMessage.prototype.ruleId = null;\nVFileMessage.prototype.position = null;",
        "mapping": {
            "unist-util-stringify-position": "{80B8592C-2F8B-45A6-9CC4-A4B70D316F28}"
        },
        "path": "{unified}/../vfile-message/index.js"
    },
    "{80B8592C-2F8B-45A6-9CC4-A4B70D316F28}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyPosition = stringifyPosition;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction stringifyPosition(value) {\n  if (!value || _typeof(value) !== 'object') {\n    return '';\n  }\n\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  }\n\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  }\n\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  }\n\n  return '';\n}\n\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}",
        "mapping": {},
        "path": "{unified}/../unist-util-stringify-position/index.js"
    },
    "{AD208682-449A-46BE-97E0-ECC5F9B27108}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"path\", {\n  enumerable: true,\n  get: function get() {\n    return _path[\"default\"];\n  }\n});\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }",
        "mapping": {
            "path": "{5084DC53-54CB-4E38-A604-1CFB1007ADE3}"
        },
        "path": "{unified}/../vfile/lib/minpath.js"
    },
    "{5084DC53-54CB-4E38-A604-1CFB1007ADE3}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar isWindows = process.platform === 'win32';\n\nvar util = require('util');\n\nfunction normalizeArray(parts, allowAboveRoot) {\n  var res = [];\n\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i];\n    if (!p || p === '.') continue;\n\n    if (p === '..') {\n      if (res.length && res[res.length - 1] !== '..') {\n        res.pop();\n      } else if (allowAboveRoot) {\n        res.push('..');\n      }\n    } else {\n      res.push(p);\n    }\n  }\n\n  return res;\n}\n\nfunction trimArray(arr) {\n  var lastIndex = arr.length - 1;\n  var start = 0;\n\n  for (; start <= lastIndex; start++) {\n    if (arr[start]) break;\n  }\n\n  var end = lastIndex;\n\n  for (; end >= 0; end--) {\n    if (arr[end]) break;\n  }\n\n  if (start === 0 && end === lastIndex) return arr;\n  if (start > end) return [];\n  return arr.slice(start, end + 1);\n}\n\nvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\nvar splitTailRe = /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  var result = splitDeviceRe.exec(filename),\n      device = (result[1] || '') + (result[2] || ''),\n      tail = result[3] || '';\n  var result2 = splitTailRe.exec(tail),\n      dir = result2[1],\n      basename = result2[2],\n      ext = result2[3];\n  return [device, dir, basename, ext];\n}\n\nfunction win32StatPath(path) {\n  var result = splitDeviceRe.exec(path),\n      device = result[1] || '',\n      isUnc = !!device && device[1] !== ':';\n  return {\n    device: device,\n    isUnc: isUnc,\n    isAbsolute: isUnc || !!result[2],\n    tail: result[3]\n  };\n}\n\nfunction normalizeUNCRoot(device) {\n  return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\n}\n\nwin32.resolve = function () {\n  var resolvedDevice = '',\n      resolvedTail = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1; i--) {\n    var path;\n\n    if (i >= 0) {\n      path = arguments[i];\n    } else if (!resolvedDevice) {\n      path = process.cwd();\n    } else {\n      path = process.env['=' + resolvedDevice];\n\n      if (!path || path.substr(0, 3).toLowerCase() !== resolvedDevice.toLowerCase() + '\\\\') {\n        path = resolvedDevice + '\\\\';\n      }\n    }\n\n    if (!util.isString(path)) {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    var result = win32StatPath(path),\n        device = result.device,\n        isUnc = result.isUnc,\n        isAbsolute = result.isAbsolute,\n        tail = result.tail;\n\n    if (device && resolvedDevice && device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n      continue;\n    }\n\n    if (!resolvedDevice) {\n      resolvedDevice = device;\n    }\n\n    if (!resolvedAbsolute) {\n      resolvedTail = tail + '\\\\' + resolvedTail;\n      resolvedAbsolute = isAbsolute;\n    }\n\n    if (resolvedDevice && resolvedAbsolute) {\n      break;\n    }\n  }\n\n  if (isUnc) {\n    resolvedDevice = normalizeUNCRoot(resolvedDevice);\n  }\n\n  resolvedTail = normalizeArray(resolvedTail.split(/[\\\\\\/]+/), !resolvedAbsolute).join('\\\\');\n  return resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail || '.';\n};\n\nwin32.normalize = function (path) {\n  var result = win32StatPath(path),\n      device = result.device,\n      isUnc = result.isUnc,\n      isAbsolute = result.isAbsolute,\n      tail = result.tail,\n      trailingSlash = /[\\\\\\/]$/.test(tail);\n  tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\n\n  if (!tail && !isAbsolute) {\n    tail = '.';\n  }\n\n  if (tail && trailingSlash) {\n    tail += '\\\\';\n  }\n\n  if (isUnc) {\n    device = normalizeUNCRoot(device);\n  }\n\n  return device + (isAbsolute ? '\\\\' : '') + tail;\n};\n\nwin32.isAbsolute = function (path) {\n  return win32StatPath(path).isAbsolute;\n};\n\nwin32.join = function () {\n  var paths = [];\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (!util.isString(arg)) {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    if (arg) {\n      paths.push(arg);\n    }\n  }\n\n  var joined = paths.join('\\\\');\n\n  if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\n    joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\n  }\n\n  return win32.normalize(joined);\n};\n\nwin32.relative = function (from, to) {\n  from = win32.resolve(from);\n  to = win32.resolve(to);\n  var lowerFrom = from.toLowerCase();\n  var lowerTo = to.toLowerCase();\n  var toParts = trimArray(to.split('\\\\'));\n  var lowerFromParts = trimArray(lowerFrom.split('\\\\'));\n  var lowerToParts = trimArray(lowerTo.split('\\\\'));\n  var length = Math.min(lowerFromParts.length, lowerToParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (lowerFromParts[i] !== lowerToParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  if (samePartsLength == 0) {\n    return to;\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < lowerFromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('\\\\');\n};\n\nwin32._makeLong = function (path) {\n  if (!util.isString(path)) return path;\n\n  if (!path) {\n    return '';\n  }\n\n  var resolvedPath = win32.resolve(path);\n\n  if (/^[a-zA-Z]\\:\\\\/.test(resolvedPath)) {\n    return '\\\\\\\\?\\\\' + resolvedPath;\n  } else if (/^\\\\\\\\[^?.]/.test(resolvedPath)) {\n    return \"\\\\\\\\?\\\\UNC\\\\\" + resolvedPath.substring(2);\n  }\n\n  return path;\n};\n\nwin32.dirname = function (path) {\n  var result = win32SplitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    return '.';\n  }\n\n  if (dir) {\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\nwin32.basename = function (path, ext) {\n  var f = win32SplitPath(path)[2];\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nwin32.extname = function (path) {\n  return win32SplitPath(path)[3];\n};\n\nwin32.format = function (pathObject) {\n  if (!util.isObject(pathObject)) {\n    throw new TypeError(\"Parameter 'pathObject' must be an object, not \" + _typeof(pathObject));\n  }\n\n  var root = pathObject.root || '';\n\n  if (!util.isString(root)) {\n    throw new TypeError(\"'pathObject.root' must be a string or undefined, not \" + _typeof(pathObject.root));\n  }\n\n  var dir = pathObject.dir;\n  var base = pathObject.base || '';\n\n  if (!dir) {\n    return base;\n  }\n\n  if (dir[dir.length - 1] === win32.sep) {\n    return dir + base;\n  }\n\n  return dir + win32.sep + base;\n};\n\nwin32.parse = function (pathString) {\n  if (!util.isString(pathString)) {\n    throw new TypeError(\"Parameter 'pathString' must be a string, not \" + _typeof(pathString));\n  }\n\n  var allParts = win32SplitPath(pathString);\n\n  if (!allParts || allParts.length !== 4) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n\n  return {\n    root: allParts[0],\n    dir: allParts[0] + allParts[1].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[3],\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n  };\n};\n\nwin32.sep = '\\\\';\nwin32.delimiter = ';';\nvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar posix = {};\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\nposix.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd();\n\n    if (!util.isString(path)) {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path[0] === '/';\n  }\n\n  resolvedPath = normalizeArray(resolvedPath.split('/'), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n};\n\nposix.normalize = function (path) {\n  var isAbsolute = posix.isAbsolute(path),\n      trailingSlash = path && path[path.length - 1] === '/';\n  path = normalizeArray(path.split('/'), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\nposix.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n};\n\nposix.join = function () {\n  var path = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var segment = arguments[i];\n\n    if (!util.isString(segment)) {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    if (segment) {\n      if (!path) {\n        path += segment;\n      } else {\n        path += '/' + segment;\n      }\n    }\n  }\n\n  return posix.normalize(path);\n};\n\nposix.relative = function (from, to) {\n  from = posix.resolve(from).substr(1);\n  to = posix.resolve(to).substr(1);\n  var fromParts = trimArray(from.split('/'));\n  var toParts = trimArray(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nposix._makeLong = function (path) {\n  return path;\n};\n\nposix.dirname = function (path) {\n  var result = posixSplitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    return '.';\n  }\n\n  if (dir) {\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\nposix.basename = function (path, ext) {\n  var f = posixSplitPath(path)[2];\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nposix.extname = function (path) {\n  return posixSplitPath(path)[3];\n};\n\nposix.format = function (pathObject) {\n  if (!util.isObject(pathObject)) {\n    throw new TypeError(\"Parameter 'pathObject' must be an object, not \" + _typeof(pathObject));\n  }\n\n  var root = pathObject.root || '';\n\n  if (!util.isString(root)) {\n    throw new TypeError(\"'pathObject.root' must be a string or undefined, not \" + _typeof(pathObject.root));\n  }\n\n  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';\n  var base = pathObject.base || '';\n  return dir + base;\n};\n\nposix.parse = function (pathString) {\n  if (!util.isString(pathString)) {\n    throw new TypeError(\"Parameter 'pathString' must be a string, not \" + _typeof(pathString));\n  }\n\n  var allParts = posixSplitPath(pathString);\n\n  if (!allParts || allParts.length !== 4) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n\n  allParts[1] = allParts[1] || '';\n  allParts[2] = allParts[2] || '';\n  allParts[3] = allParts[3] || '';\n  return {\n    root: allParts[0],\n    dir: allParts[0] + allParts[1].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[3],\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n  };\n};\n\nposix.sep = '/';\nposix.delimiter = ':';\nif (isWindows) module.exports = win32;else module.exports = posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;",
        "mapping": {
            "util": "{95574A51-704A-49A4-9004-3377707F4443}"
        },
        "path": "{unified}/../path/path.js"
    },
    "{95574A51-704A-49A4-9004-3377707F4443}": {
        "source": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n};\n\nexports.deprecate = function (fn, msg) {\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n\nfunction inspect(obj, opts) {\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    ctx.showHidden = opts;\n  } else if (opts) {\n    exports._extend(ctx, opts);\n  }\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect;\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n};\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  }\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  }\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}'];\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return _typeof(arg) === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || _typeof(arg) === 'symbol' || typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}",
        "mapping": {
            "./support/isBuffer": "{83133937-F62A-4563-9E4D-3A2B81B7EB9B}",
            "inherits": "{76368CA6-E9EC-484C-885B-963545A887F5}"
        },
        "path": "{unified}/../util/util.js"
    },
    "{83133937-F62A-4563-9E4D-3A2B81B7EB9B}": {
        "source": "\"use strict\";\n\nmodule.exports = function isBuffer(arg) {\n  return arg instanceof Buffer;\n};",
        "mapping": {},
        "path": "{unified}/../util/support/isBuffer.js"
    },
    "{76368CA6-E9EC-484C-885B-963545A887F5}": {
        "source": "\"use strict\";\n\ntry {\n  var util = require('util');\n\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}",
        "mapping": {
            "util": "{8F403E73-B746-4217-8655-918A57FC41B3}",
            "./inherits_browser.js": "{88CF33C5-3813-446B-9153-226480BD27B8}"
        },
        "path": "{unified}/../inherits/inherits.js"
    },
    "{8F403E73-B746-4217-8655-918A57FC41B3}": {
        "source": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n};\n\nexports.deprecate = function (fn, msg) {\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n\nfunction inspect(obj, opts) {\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    ctx.showHidden = opts;\n  } else if (opts) {\n    exports._extend(ctx, opts);\n  }\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect;\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n};\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  }\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  }\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}'];\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return _typeof(arg) === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || _typeof(arg) === 'symbol' || typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}",
        "mapping": {},
        "path": "{unified}/../util/util.js"
    },
    "{88CF33C5-3813-446B-9153-226480BD27B8}": {
        "source": "\"use strict\";\n\nif (typeof Object.create === 'function') {\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}",
        "mapping": {},
        "path": "{unified}/../inherits/inherits_browser.js"
    },
    "{E073EA8D-7600-4237-9F17-D3B4987D17D5}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"proc\", {\n  enumerable: true,\n  get: function get() {\n    return _process[\"default\"];\n  }\n});\n\nvar _process = _interopRequireDefault(require(\"process\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }",
        "mapping": {
            "process": "{21C0A2C8-FAF5-4E1C-A6FD-2B6B192167D4}"
        },
        "path": "{unified}/../vfile/lib/minproc.js"
    },
    "{21C0A2C8-FAF5-4E1C-A6FD-2B6B192167D4}": {
        "source": "\"use strict\";\n\nmodule.exports = global.process;",
        "mapping": {},
        "path": "{unified}/../process/index.js"
    },
    "{B43F2E99-9EC6-4C7E-91AA-A9900856CB49}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isUrl\", {\n  enumerable: true,\n  get: function get() {\n    return _minurlShared.isUrl;\n  }\n});\nObject.defineProperty(exports, \"urlToPath\", {\n  enumerable: true,\n  get: function get() {\n    return _url.fileURLToPath;\n  }\n});\n\nvar _url = require(\"url\");\n\nvar _minurlShared = require(\"./minurl.shared.js\");",
        "mapping": {
            "url": "{8E272FDF-6064-4D81-935E-944BCC97BC3C}",
            "./minurl.shared.js": "{581648DF-2432-4877-A17B-500A3B455B53}"
        },
        "path": "{unified}/../vfile/lib/minurl.js"
    },
    "{8E272FDF-6064-4D81-935E-944BCC97BC3C}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar punycode = require('punycode');\n\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    autoEscape = ['\\''].concat(unwise),\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    unsafeProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    hostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    slashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n},\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + _typeof(url));\n  }\n\n  var queryIndex = url.indexOf('?'),\n      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n  var rest = url;\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    var hostEnd = -1;\n\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    }\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      atSign = rest.lastIndexOf('@');\n    } else {\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    hostEnd = -1;\n\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    }\n\n    if (hostEnd === -1) hostEnd = rest.length;\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n    this.parseHost();\n    this.hostname = this.hostname || '';\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  if (!unsafeProtocol[lowerProto]) {\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) continue;\n      var esc = encodeURIComponent(ae);\n\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    this.search = '';\n    this.query = {};\n  }\n\n  if (rest) this.pathname = rest;\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  this.href = this.format();\n  return this;\n};\n\nfunction urlFormat(obj) {\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || query && '?' + query || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  result.hash = relative.hash;\n\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.slashes && !relative.protocol) {\n    var rkeys = Object.keys(relative);\n\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n    }\n\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n\n      while (relPath.length && !(relative.host = relPath.shift())) {\n        ;\n      }\n\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\n    }\n\n    result.host = '';\n\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\n      }\n\n      relative.host = null;\n    }\n\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n  } else if (relPath.length) {\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n\n    result.search = relative.search;\n    result.query = relative.query;\n\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n  var up = 0;\n\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/';\n\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || result.host && srcPath.length;\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) this.hostname = host;\n};",
        "mapping": {
            "punycode": "{A1B8135E-8A04-4140-9ED3-DD40BBA15C91}",
            "./util": "{0A26CB7C-C392-49D6-89BA-4B9BF50A7460}",
            "querystring": "{11FB1070-7759-425B-B984-BA0EDBE07F9E}"
        },
        "path": "{unified}/../url/url.js"
    },
    "{A1B8135E-8A04-4140-9ED3-DD40BBA15C91}": {
        "source": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n;\n\n(function (root) {\n  var freeExports = (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) == 'object' && module && !module.nodeType && module;\n  var freeGlobal = (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n\n  var punycode,\n      maxInt = 2147483647,\n      base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      delimiter = '-',\n      regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n      baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n      key;\n\n  function error(type) {\n    throw RangeError(errors[type]);\n  }\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      result = parts[0] + '@';\n      string = parts[1];\n    }\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n\n  function digitToBasic(digit, flag) {\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n\n  function decode(input) {\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n        baseMinusT;\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    }\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;) {\n      for (oldi = i, w = 1, k = base;; k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0);\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out;\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n        inputLength,\n        handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT;\n    input = ucs2decode(input);\n    inputLength = input.length;\n    n = initialN;\n    delta = 0;\n    bias = initialBias;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length;\n\n    if (basicLength) {\n      output.push(delimiter);\n    }\n\n    while (handledCPCount < inputLength) {\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      }\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          for (q = delta, k = base;; k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n\n  punycode = {\n    'version': '1.3.2',\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n\n  if (typeof define == 'function' && _typeof(define.amd) == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      freeModule.exports = punycode;\n    } else {\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    root.punycode = punycode;\n  }\n})(void 0);",
        "mapping": {},
        "path": "{unified}/../url/node_modules/punycode/punycode.js"
    },
    "{0A26CB7C-C392-49D6-89BA-4B9BF50A7460}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nmodule.exports = {\n  isString: function isString(arg) {\n    return typeof arg === 'string';\n  },\n  isObject: function isObject(arg) {\n    return _typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function isNull(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n};",
        "mapping": {},
        "path": "{unified}/../url/util.js"
    },
    "{11FB1070-7759-425B-B984-BA0EDBE07F9E}": {
        "source": "\"use strict\";\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');",
        "mapping": {
            "./decode": "{ED3FAB12-5FCD-468E-9C26-57D0F878A447}",
            "./encode": "{E3727E9A-6790-4A12-A1F5-4BEFAAD2C2CB}"
        },
        "path": "{unified}/../querystring/index.js"
    },
    "{ED3FAB12-5FCD-468E-9C26-57D0F878A447}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function (qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr,\n        vstr,\n        k,\n        v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};",
        "mapping": {},
        "path": "{unified}/../querystring/decode.js"
    },
    "{E3727E9A-6790-4A12-A1F5-4BEFAAD2C2CB}": {
        "source": "\"use strict\";\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar stringifyPrimitive = function stringifyPrimitive(v) {\n  switch (_typeof(v)) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (_typeof(obj) === 'object') {\n    return Object.keys(obj).map(function (k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function (v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n};",
        "mapping": {},
        "path": "{unified}/../querystring/encode.js"
    },
    "{581648DF-2432-4877-A17B-500A3B455B53}": {
        "source": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUrl = isUrl;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction isUrl(fileURLOrPath) {\n  return fileURLOrPath !== null && _typeof(fileURLOrPath) === 'object' && fileURLOrPath.href && fileURLOrPath.origin;\n}",
        "mapping": {},
        "path": "{unified}/../vfile/lib/minurl.shared.js"
    },
    "{CF076860-3013-4EF8-B741-DE4C06C289CA}": {
        "source": "{\n  \"_from\": \"unified@^10.0.0\",\n  \"_id\": \"unified@10.1.2\",\n  \"_inBundle\": false,\n  \"_integrity\": \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\",\n  \"_location\": \"/unified\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"type\": \"range\",\n    \"registry\": true,\n    \"raw\": \"unified@^10.0.0\",\n    \"name\": \"unified\",\n    \"escapedName\": \"unified\",\n    \"rawSpec\": \"^10.0.0\",\n    \"saveSpec\": null,\n    \"fetchSpec\": \"^10.0.0\"\n  },\n  \"_requiredBy\": [\n    \"/rehype-stringify\",\n    \"/remark-parse\",\n    \"/remark-rehype\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/unified/-/unified-10.1.2.tgz\",\n  \"_shasum\": \"b1d64e55dafe1f0b98bb6c719881103ecf6c86df\",\n  \"_spec\": \"unified@^10.0.0\",\n  \"_where\": \"C:\\\\bin\\\\github\\\\monorepo\\\\node_modules\\\\rehype-stringify\",\n  \"author\": {\n    \"name\": \"Titus Wormer\",\n    \"email\": \"tituswormer@gmail.com\",\n    \"url\": \"https://wooorm.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/unifiedjs/unified/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"contributors\": [\n    {\n      \"name\": \"Titus Wormer\",\n      \"email\": \"tituswormer@gmail.com\",\n      \"url\": \"https://wooorm.com\"\n    },\n    {\n      \"name\": \"Junyoung Choi\",\n      \"email\": \"fluke8259@gmail.com\"\n    },\n    {\n      \"name\": \"Hernan Rajchert\",\n      \"email\": \"hrajchert@gmail.com\"\n    },\n    {\n      \"name\": \"Christian Murphy\",\n      \"email\": \"christian.murphy.42@gmail.com\"\n    },\n    {\n      \"name\": \"Vse Mozhet Byt\",\n      \"email\": \"vsemozhetbyt@gmail.com\"\n    },\n    {\n      \"name\": \"Richard Littauer\",\n      \"email\": \"richard.littauer@gmail.com\"\n    }\n  ],\n  \"dependencies\": {\n    \"@types/unist\": \"^2.0.0\",\n    \"bail\": \"^2.0.0\",\n    \"extend\": \"^3.0.0\",\n    \"is-buffer\": \"^2.0.0\",\n    \"is-plain-obj\": \"^4.0.0\",\n    \"trough\": \"^2.0.0\",\n    \"vfile\": \"^5.0.0\"\n  },\n  \"deprecated\": false,\n  \"description\": \"Interface for parsing, inspecting, transforming, and serializing content through syntax trees\",\n  \"devDependencies\": {\n    \"@types/extend\": \"^3.0.0\",\n    \"@types/tape\": \"^4.0.0\",\n    \"c8\": \"^7.0.0\",\n    \"prettier\": \"^2.0.0\",\n    \"remark-cli\": \"^10.0.0\",\n    \"remark-preset-wooorm\": \"^9.0.0\",\n    \"rimraf\": \"^3.0.0\",\n    \"tape\": \"^5.0.0\",\n    \"tsd\": \"^0.19.0\",\n    \"type-coverage\": \"^2.0.0\",\n    \"typescript\": \"^4.0.0\",\n    \"xo\": \"^0.48.0\"\n  },\n  \"files\": [\n    \"lib/\",\n    \"index.d.ts\",\n    \"index.js\"\n  ],\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/unified\"\n  },\n  \"homepage\": \"https://unifiedjs.com\",\n  \"keywords\": [\n    \"unified\",\n    \"process\",\n    \"parse\",\n    \"transform\",\n    \"compile\",\n    \"stringify\",\n    \"serialize\",\n    \"ast\",\n    \"cst\",\n    \"syntax\",\n    \"tree\",\n    \"content\",\n    \"rehype\",\n    \"retext\",\n    \"remark\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"name\": \"unified\",\n  \"prettier\": {\n    \"tabWidth\": 2,\n    \"useTabs\": false,\n    \"singleQuote\": true,\n    \"bracketSpacing\": false,\n    \"semi\": false,\n    \"trailingComma\": \"none\"\n  },\n  \"remarkConfig\": {\n    \"plugins\": [\n      \"preset-wooorm\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/unifiedjs/unified.git\"\n  },\n  \"scripts\": {\n    \"build\": \"rimraf \\\"test/**/*.d.ts\\\" && tsc && tsd && type-coverage\",\n    \"format\": \"remark . -qfo && prettier . -w --loglevel warn && xo --fix\",\n    \"test\": \"npm run build && npm run format && npm run test-coverage\",\n    \"test-api\": \"node --unhandled-rejections=strict --conditions development test/index.js\",\n    \"test-coverage\": \"c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --unhandled-rejections=strict --conditions development test/index.js\"\n  },\n  \"sideEffects\": false,\n  \"type\": \"module\",\n  \"typeCoverage\": {\n    \"atLeast\": 100,\n    \"detail\": true,\n    \"strict\": true,\n    \"ignoreCatch\": true\n  },\n  \"types\": \"index.d.ts\",\n  \"version\": \"10.1.2\",\n  \"xo\": {\n    \"prettier\": true,\n    \"rules\": {\n      \"@typescript-eslint/ban-types\": \"off\",\n      \"promise/param-names\": \"off\"\n    },\n    \"ignores\": [\n      \"types/\"\n    ]\n  }\n}\n",
        "path": "{unified}/package.json"
    }
}